<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard1.5</TargetFramework>
    <IsTool>true</IsTool>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
  </PropertyGroup>

  <PropertyGroup>
    <Description>Code generator for [Record]-marked types. Automatically creates backing code (constructor, With- mutators, deconstructor to tuple, Builder nested type etc.) for immutable record classes. See project site for installation instructions and more details.</Description>
    <PackageReleaseNotes>Moved generation to build-time using AArnott's CodeGeneration.Roslyn package, requires more installation steps but creates backing code automatically during build which is definitely an improvement.</PackageReleaseNotes>
    <PackageTags>record; immutable; attribute; generator; amadevus; codegen; code generator; code generation</PackageTags>
    <NoPackageAnalysis>true</NoPackageAnalysis>
  </PropertyGroup>

  <ItemGroup>
    <None Update="build\Amadevus.RecordGenerator.props" Pack="true" PackagePath="" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CodeGeneration.Roslyn" Version="0.4.11" PrivateAssets="all" />
    <PackageReference Include="CodeGeneration.Roslyn.BuildTime" Version="0.4.11" PrivateAssets="analyzers;contentFiles" />
    <PackageReference Update="NETStandard.Library" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Amadevus.RecordGenerator.Attributes\Amadevus.RecordGenerator.Attributes.csproj" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="dotnet-codegen" Version="0.4.11" />
  </ItemGroup>

</Project>
